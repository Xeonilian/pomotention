import{_ as s,c as a,o as l,ag as e}from"./chunks/framework.Cs5y-aXb.js";const r=JSON.parse('{"title":"GitHub CLI（gh-cli）安装与认证 SOP","description":"","frontmatter":{},"headers":[],"relativePath":"dev-log/SOP/gh-cli-install.md","filePath":"dev-log/SOP/gh-cli-install.md","lastUpdated":1757908071000}'),t={name:"dev-log/SOP/gh-cli-install.md"};function h(n,i,o,p,d,c){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="github-cli-gh-cli-安装与认证-sop" tabindex="-1">GitHub CLI（gh-cli）安装与认证 SOP <a class="header-anchor" href="#github-cli-gh-cli-安装与认证-sop" aria-label="Permalink to &quot;GitHub CLI（gh-cli）安装与认证 SOP&quot;">​</a></h1><h2 id="前置条件" tabindex="-1">前置条件 <a class="header-anchor" href="#前置条件" aria-label="Permalink to &quot;前置条件&quot;">​</a></h2><ul><li>已具备 Windows 环境（示例命令基于 Windows CMD/PowerShell）</li><li>具备 Git 基础环境（可选，用于 ssh 测试）</li></ul><h2 id="_1-通过-chocolatey-安装-gh-cli" tabindex="-1">1. 通过 Chocolatey 安装 gh-cli <a class="header-anchor" href="#_1-通过-chocolatey-安装-gh-cli" aria-label="Permalink to &quot;1. 通过 Chocolatey 安装 gh-cli&quot;">​</a></h2><ul><li>以管理员身份打开 PowerShell 或 CMD，执行：</li></ul><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">choco install gh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span></span></code></pre></div><ul><li>验证安装：</li></ul><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span></span></code></pre></div><h2 id="_2-创建-github-classic-token" tabindex="-1">2. 创建 GitHub Classic Token <a class="header-anchor" href="#_2-创建-github-classic-token" aria-label="Permalink to &quot;2. 创建 GitHub Classic Token&quot;">​</a></h2><ul><li>路径：GitHub 网站 → <code>Settings</code> → <code>Developer settings</code> → <code>Personal access tokens</code> → <code>Tokens (classic)</code> → <code>Generate new token (classic)</code></li><li>勾选权限： <ul><li>必选 scopes： <ul><li><code>repo</code></li><li><code>read:org</code>（如需访问组织仓库）</li></ul></li><li>可选： <ul><li><code>workflow</code>（需要操作 GitHub Actions 时勾选）</li></ul></li></ul></li><li>生成后复制保存你的 Token（记为 <code>YOUR_TOKEN_HERE</code>）</li></ul><blockquote><p>注意：Classic Token 仅显示一次，务必妥善保存。</p></blockquote><h2 id="_3-基础连通性测试" tabindex="-1">3. 基础连通性测试 <a class="header-anchor" href="#_3-基础连通性测试" aria-label="Permalink to &quot;3. 基础连通性测试&quot;">​</a></h2><ul><li>使用 HTTP API 测试 Token 可用性：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Authorization: Bearer YOUR_TOKEN_HERE&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://api.github.com/user</span></span></code></pre></div><ul><li>使用 SSH 测试 GitHub 连接（需提前配置本机 SSH Key 并添加到 GitHub）：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com</span></span></code></pre></div><h2 id="_4-将-token-写入临时文件并使用-gh-登录" tabindex="-1">4. 将 Token 写入临时文件并使用 gh 登录 <a class="header-anchor" href="#_4-将-token-写入临时文件并使用-gh-登录" aria-label="Permalink to &quot;4. 将 Token 写入临时文件并使用 gh 登录&quot;">​</a></h2><ul><li>写入 Token 到临时文件：</li></ul><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">echo YOUR_TOKEN_HERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TEMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\gh_token.txt</span></span></code></pre></div><ul><li>使用 Token 登录 GitHub：</li></ul><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gh auth login </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hostname github.com </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--with-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">token </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;%TEMP%\\gh_token.txt&quot;</span></span></code></pre></div><ul><li>验证登录状态：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span></code></pre></div><h2 id="_5-常见问题排查" tabindex="-1">5. 常见问题排查 <a class="header-anchor" href="#_5-常见问题排查" aria-label="Permalink to &quot;5. 常见问题排查&quot;">​</a></h2><ul><li><strong>401/Bad credentials</strong>：确认 Token 未过期、权限 scopes 正确、未多出空格或换行。</li><li><strong>SSH 测试失败</strong>：确认本机公钥已添加至 GitHub <code>Settings</code> → <code>SSH and GPG keys</code>。</li><li><strong>代理/网络限制</strong>：必要时配置代理或切换网络后重试。</li><li><strong>多账号场景</strong>：使用 <code>--hostname github.com</code> 指定主站；必要时使用 <code>gh auth logout</code> 清理后重登。</li></ul><h2 id="_6-安全建议" tabindex="-1">6. 安全建议 <a class="header-anchor" href="#_6-安全建议" aria-label="Permalink to &quot;6. 安全建议&quot;">​</a></h2><ul><li><strong>不要</strong>将 Token 写入仓库或脚本明文；临时文件使用完建议删除：</li></ul><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">del </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%TEMP%\\gh_token.txt&quot;</span></span></code></pre></div><ul><li>优先使用最小权限原则，仅勾选必需 scopes。</li><li>可考虑改用 fine-grained tokens，在仓库维度最小化授权。</li></ul><h2 id="_7-快速验证命令" tabindex="-1">7. 快速验证命令 <a class="header-anchor" href="#_7-快速验证命令" aria-label="Permalink to &quot;7. 快速验证命令&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看当前用户：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> api</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列出可见仓库：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span></code></pre></div>`,31)]))}const g=s(t,[["render",h]]);export{r as __pageData,g as default};
