import{_ as a,c as o,o as i,ag as l}from"./chunks/framework.Cs5y-aXb.js";const T=JSON.parse('{"title":"Contracts","description":"","frontmatter":{},"headers":[],"relativePath":"dev-log/contracts.md","filePath":"dev-log/contracts.md","lastUpdated":1760341980000}'),t={name:"dev-log/contracts.md"};function d(c,e,r,n,h,u){return i(),o("div",null,e[0]||(e[0]=[l('<h1 id="contracts" tabindex="-1">Contracts <a class="header-anchor" href="#contracts" aria-label="Permalink to &quot;Contracts&quot;">​</a></h1><h2 id="contract-1-单条任务生成-qr-码-通用约束" tabindex="-1">Contract #1: 单条任务生成 QR 码（通用约束） <a class="header-anchor" href="#contract-1-单条任务生成-qr-码-通用约束" aria-label="Permalink to &quot;Contract #1: 单条任务生成 QR 码（通用约束）&quot;">​</a></h2><h3 id="given" tabindex="-1">Given <a class="header-anchor" href="#given" aria-label="Permalink to &quot;Given&quot;">​</a></h3><ul><li>版本 0.4.1；日期：2025-09-12</li><li>数据来源：Todo 或 Schedule</li><li>必备字段：<code>id</code>，<code>dueRange[0]</code>（若为 Schedule）或 <code>startTime</code>（若为 Todo）</li><li>可选字段：<code>location</code> / <code>priority</code> / <code>activityTitle</code> / <code>startTime</code> / <code>doneTime</code> / <code>estPomo[]</code> / <code>dueRange[1]</code></li><li>时区：Asia/Shanghai（+08:00）</li></ul><h3 id="when" tabindex="-1">When <a class="header-anchor" href="#when" aria-label="Permalink to &quot;When&quot;">​</a></h3><ul><li>选择该条任务</li><li>点击 <code>QrCode24Regular</code> 按钮生成二维码</li><li>使用手机相机或系统扫码工具扫描，解析得到 ICS 文本</li></ul><h3 id="then" tabindex="-1">Then <a class="header-anchor" href="#then" aria-label="Permalink to &quot;Then&quot;">​</a></h3><ul><li>生成的 ICS 满足本场景的时间规则与字段要求</li><li>字段名大写，时间含时区或 UTC；行长遵循软换行</li><li>UID 稳定且唯一（规则建议：<code>&lt;type&gt;-&lt;id&gt;@your.domain</code> 或 UUIDv5），不依赖时间戳</li><li><code>SUMMARY</code> 映射 <code>activityTitle</code>（若缺失，回退到 <code>Schedule.activityTitle</code> 或 <code>Todo.activityTitle</code> 任一存在者）</li><li><code>DESCRIPTION</code> 可包含 <code>location</code>、<code>priority</code>（格式参见“字段映射与校验清单”）</li></ul><hr><h2 id="contract-2-单条任务生成-qr-码-todo-无开始-结束时间-→-全天" tabindex="-1">Contract #2: 单条任务生成 QR 码（Todo 无开始/结束时间 → 全天） <a class="header-anchor" href="#contract-2-单条任务生成-qr-码-todo-无开始-结束时间-→-全天" aria-label="Permalink to &quot;Contract #2: 单条任务生成 QR 码（Todo 无开始/结束时间 → 全天）&quot;">​</a></h2><h3 id="given-1" tabindex="-1">Given <a class="header-anchor" href="#given-1" aria-label="Permalink to &quot;Given&quot;">​</a></h3><ul><li>数据：Todo</li><li>必备字段：<code>Todo.id</code>，<code>Todo.activityTitle</code></li><li>时间：无 <code>startTime</code>、无 <code>doneTime</code></li></ul><h3 id="when-1" tabindex="-1">When <a class="header-anchor" href="#when-1" aria-label="Permalink to &quot;When&quot;">​</a></h3><ul><li>如 Contract #1</li></ul><h3 id="then-1" tabindex="-1">Then <a class="header-anchor" href="#then-1" aria-label="Permalink to &quot;Then&quot;">​</a></h3><ul><li>导出为全天事件：<code>DTSTART;VALUE=DATE=&lt;YYYYMMDD&gt;</code>，<code>DTEND;VALUE=DATE=&lt;YYYYMMDD+1&gt;</code></li><li><code>SUMMARY=&lt;Todo.activityTitle&gt;</code></li><li><code>DESCRIPTION</code> 可包含 <code>priority</code></li></ul><hr><h2 id="contract-3-单条任务生成-qr-码-todo-有-starttime-estpomo" tabindex="-1">Contract #3: 单条任务生成 QR 码（Todo 有 startTime + estPomo） <a class="header-anchor" href="#contract-3-单条任务生成-qr-码-todo-有-starttime-estpomo" aria-label="Permalink to &quot;Contract #3: 单条任务生成 QR 码（Todo 有 startTime + estPomo）&quot;">​</a></h2><h3 id="given-2" tabindex="-1">Given <a class="header-anchor" href="#given-2" aria-label="Permalink to &quot;Given&quot;">​</a></h3><ul><li>数据：Todo</li><li>必备字段：<code>Todo.id</code>，<code>Todo.activityTitle</code>，<code>Todo.startTime（含时区）</code>，<code>Todo.estPomo[]</code></li><li>说明：时长 (N = \\max(1, \\sum estPomo))，总时长 = (N \\times 30) 分钟</li></ul><h3 id="when-2" tabindex="-1">When <a class="header-anchor" href="#when-2" aria-label="Permalink to &quot;When&quot;">​</a></h3><ul><li>如 Contract #1</li></ul><h3 id="then-2" tabindex="-1">Then <a class="header-anchor" href="#then-2" aria-label="Permalink to &quot;Then&quot;">​</a></h3><ul><li><code>DTSTART = startTime</code></li><li><code>DTEND = startTime + N×30min</code></li><li>其他字段映射同 Contract #2</li></ul><hr><h2 id="contract-4-单条任务生成-qr-码-todo-有-starttime-donetime" tabindex="-1">Contract #4: 单条任务生成 QR 码（Todo 有 startTime + doneTime） <a class="header-anchor" href="#contract-4-单条任务生成-qr-码-todo-有-starttime-donetime" aria-label="Permalink to &quot;Contract #4: 单条任务生成 QR 码（Todo 有 startTime + doneTime）&quot;">​</a></h2><h3 id="given-3" tabindex="-1">Given <a class="header-anchor" href="#given-3" aria-label="Permalink to &quot;Given&quot;">​</a></h3><ul><li>数据：Todo</li><li>必备字段：<code>Todo.id</code>，<code>Todo.activityTitle</code>，<code>Todo.startTime</code>，<code>Todo.doneTime</code></li><li>说明：不使用 <code>estPomo</code> 计算</li></ul><h3 id="when-3" tabindex="-1">When <a class="header-anchor" href="#when-3" aria-label="Permalink to &quot;When&quot;">​</a></h3><ul><li>如 Contract #1</li></ul><h3 id="then-3" tabindex="-1">Then <a class="header-anchor" href="#then-3" aria-label="Permalink to &quot;Then&quot;">​</a></h3><ul><li><code>DTSTART = startTime</code></li><li><code>DTEND = doneTime</code></li><li>其他字段映射同 Contract #2</li></ul><hr><h2 id="contract-5-单条任务生成-qr-码-schedule-有-duerange-0-duerange-1" tabindex="-1">Contract #5: 单条任务生成 QR 码（Schedule 有 dueRange[0], dueRange[1]） <a class="header-anchor" href="#contract-5-单条任务生成-qr-码-schedule-有-duerange-0-duerange-1" aria-label="Permalink to &quot;Contract #5: 单条任务生成 QR 码（Schedule 有 dueRange[0], dueRange[1]）&quot;">​</a></h2><h3 id="given-4" tabindex="-1">Given <a class="header-anchor" href="#given-4" aria-label="Permalink to &quot;Given&quot;">​</a></h3><ul><li>数据：Schedule</li><li>必备字段：<code>Schedule.id</code>，<code>Schedule.activityTitle</code>，<code>Schedule.dueRange[0]</code>（开始），<code>Schedule.dueRange[1]</code>（结束）</li><li>可选字段：<code>Schedule.location</code></li></ul><h3 id="when-4" tabindex="-1">When <a class="header-anchor" href="#when-4" aria-label="Permalink to &quot;When&quot;">​</a></h3><ul><li>如 Contract #1</li></ul><h3 id="then-4" tabindex="-1">Then <a class="header-anchor" href="#then-4" aria-label="Permalink to &quot;Then&quot;">​</a></h3><ul><li><code>DTSTART = dueRange[0]</code></li><li><code>DTEND = dueRange[1]</code></li><li><code>SUMMARY = Schedule.activityTitle</code></li><li><code>DESCRIPTION</code> 可包含 <code>location</code></li></ul><hr><h2 id="contract-6-单条任务生成-qr-码-schedule-仅有-duerange-0-无时长-→-系统默认" tabindex="-1">Contract #6: 单条任务生成 QR 码（Schedule 仅有 dueRange[0] 无时长 → 系统默认） <a class="header-anchor" href="#contract-6-单条任务生成-qr-码-schedule-仅有-duerange-0-无时长-→-系统默认" aria-label="Permalink to &quot;Contract #6: 单条任务生成 QR 码（Schedule 仅有 dueRange[0] 无时长 → 系统默认）&quot;">​</a></h2><h3 id="given-5" tabindex="-1">Given <a class="header-anchor" href="#given-5" aria-label="Permalink to &quot;Given&quot;">​</a></h3><ul><li>数据：Schedule</li><li>必备字段：<code>Schedule.id</code>，<code>Schedule.activityTitle</code>，<code>Schedule.dueRange[0]</code></li><li>无 <code>dueRange[1]</code></li></ul><h3 id="when-5" tabindex="-1">When <a class="header-anchor" href="#when-5" aria-label="Permalink to &quot;When&quot;">​</a></h3><ul><li>如 Contract #1</li></ul><h3 id="then-5" tabindex="-1">Then <a class="header-anchor" href="#then-5" aria-label="Permalink to &quot;Then&quot;">​</a></h3><ul><li><code>DTSTART = dueRange[0]</code></li><li><code>DTEND = dueRange[0] + 默认时长</code></li><li>兼容性说明：不同系统可能显示为与开始时间相同或 +1 小时</li><li>其他字段映射同 Contract #5</li></ul><hr><h2 id="contract-6-s2-c1-uv1-数据页面右侧内容-加星-显示与编辑" tabindex="-1">Contract #6（S2 C1 UV1）：数据页面右侧内容“加星”显示与编辑 <a class="header-anchor" href="#contract-6-s2-c1-uv1-数据页面右侧内容-加星-显示与编辑" aria-label="Permalink to &quot;Contract #6（S2 C1 UV1）：数据页面右侧内容“加星”显示与编辑&quot;">​</a></h2><h3 id="goals" tabindex="-1">Goals <a class="header-anchor" href="#goals" aria-label="Permalink to &quot;Goals&quot;">​</a></h3><ul><li>在右侧内容区域显示星标并可点击切换，使用现有数据与接口，不修改字段语义或可选值。</li><li>与左侧列表联动：依赖既有订阅/刷新机制自然同步，不新增状态机或接口规则。</li></ul><h3 id="given-6" tabindex="-1">Given <a class="header-anchor" href="#given-6" aria-label="Permalink to &quot;Given&quot;">​</a></h3><ul><li>实体：<code>Task</code><ul><li>字段：<code>task.id: string</code>（必备）</li><li>字段：<code>task.starred?: boolean | undefined</code>（沿用现有语义，不做收敛或变更）</li></ul></li><li>页面：数据页面，左右分栏；右侧显示所选 <code>Task</code> 的内容区域。</li><li>左侧列表可能启用“仅显示加星”筛选（联动基于既有 store/订阅机制，无新增契约）。</li><li>已存在可用的“切换星标”的调用能力（接口或 action）；本次变更仅调用，不调整其请求/响应结构与字段语义。</li></ul><h2 id="when-6" tabindex="-1">When <a class="header-anchor" href="#when-6" aria-label="Permalink to &quot;When&quot;">​</a></h2><ul><li>右侧内容区域渲染所选 <code>Task</code>。</li><li>用户点击右侧星标控件 <code>toggleTaskStar</code>。</li></ul><h3 id="then-6" tabindex="-1">Then <a class="header-anchor" href="#then-6" aria-label="Permalink to &quot;Then&quot;">​</a></h3><ul><li>显示规则（纯 UI 展示，沿用现有语义）： <ul><li><code>task.starred === true</code> → 显示“实心星”</li><li><code>task.starred === false</code> 或 <code>undefined</code> → 显示“空心星”</li></ul></li><li>点击切换（调用既有能力，不改变底层契约）： <ul><li>切换目标值：从“当前是否为 <code>true</code>”取反，即 <code>next = !(task.starred === true)</code></li><li><code>toggleTaskStar</code> useDataStore</li><li>不引入新的“状态机定义”、不声明“不可回到 undefined”等新规则；保持现有后端/Store 语义不变</li></ul></li><li>左侧联动： <ul><li>左侧列表基于 pinia 刷新</li></ul></li></ul><p>好的，收到！我立刻根据你的更正信息修改 <code>Contract #7</code>。</p><p>将 <code>activity.tagIds: string[]</code> 更正为 <code>activity.tagIds: number[]</code>，并将全局筛选状态的字段名和位置更正为 <code>searchUi.filterTagIds</code>。</p><p>这是更新后的版本：</p><hr><h2 id="contract-7-s2-c1-uv1-数据页面-标签-显示、编辑与筛选" tabindex="-1">Contract #7（S2 C1 UV1）：数据页面“标签”显示、编辑与筛选 <a class="header-anchor" href="#contract-7-s2-c1-uv1-数据页面-标签-显示、编辑与筛选" aria-label="Permalink to &quot;Contract #7（S2 C1 UV1）：数据页面“标签”显示、编辑与筛选&quot;">​</a></h2><h3 id="goals-1" tabindex="-1">Goals <a class="header-anchor" href="#goals-1" aria-label="Permalink to &quot;Goals&quot;">​</a></h3><ul><li>在右侧内容区域显示标签列表，并可管理：使用 <code>TagRenderer</code> 显示 <code>activity.tagIds</code>，并通过 <code>TagManager</code> 实现增删。</li><li>与左侧列表联动筛选：点击右侧标签可触发左侧列表筛选；多次点击可叠加或取消筛选，并清晰展示当前筛选条件。</li></ul><h3 id="given-7" tabindex="-1">Given <a class="header-anchor" href="#given-7" aria-label="Permalink to &quot;Given&quot;">​</a></h3><ul><li>实体与数据： <ul><li>实体 <code>Activity</code>，包含字段 <code>activity.tagIds: number[]</code>（存储标签 ID 的数组）。</li><li>已有全局 <code>Tag</code> 数据源，可通过 <code>tagId: number</code> 获取标签的名称、颜色等信息。</li></ul></li><li>UI 组件： <ul><li><code>TagRenderer</code>: 用于在右侧内容区渲染只读的标签列表。</li><li><code>TagManager</code>: 一个可交互的标签管理器（可能在弹窗或侧边栏中），允许用户从已有标签中选择，或从 <code>activity.tagIds</code> 中移除（点击 <code>×</code>）。</li><li>左侧列表：展示 <code>Activity</code> 列表，并能响应全局的筛选状态。</li></ul></li><li>状态管理 (State)： <ul><li>存在一个 <code>searchUi</code> 状态（如 Pinia Store），其中包含用于管理当前标签筛选条件的字段 <code>searchUi.filterTagIds: number[]</code>。</li><li>左侧列表已订阅此状态，当 <code>searchUi.filterTagIds</code> 变更时会自动刷新显示结果。</li></ul></li><li>既有能力： <ul><li>已存在更新 <code>activity.tagIds</code> 的调用能力（接口或 action）。</li><li>已存在更新 <code>searchUi.filterTagIds</code> 的 action。</li></ul></li></ul><h3 id="when-7" tabindex="-1">When <a class="header-anchor" href="#when-7" aria-label="Permalink to &quot;When&quot;">​</a></h3><ol><li>标签显示：右侧内容区域渲染所选 <code>Activity+Task</code>。</li><li>标签编辑：用户点击 Tag16Regular 按钮打开 <code>TagManager</code>，并点击某个标签上的 <code>×</code> 将其移除。</li><li>单标签筛选：用户直接点击右侧/左侧内容区（<code>TagRenderer</code> 中）的某个标签。</li><li>取消单标签筛选：右侧用户再次点击同一个已被激活为筛选条件的标签。</li><li>叠加筛选：用户在已有一个或多个标签筛选激活的状态下，点击另一个不同的标签。</li><li>清除所有筛选：左侧用户点击“一键清除筛选”控件。</li></ol><h3 id="then-7" tabindex="-1">Then <a class="header-anchor" href="#then-7" aria-label="Permalink to &quot;Then&quot;">​</a></h3><ul><li><ol><li>显示规则 (UI 展示)：</li></ol><ul><li><code>TagRenderer</code> 遍历 <code>activity.tagIds</code>，根据每个 <code>tagId: number</code> 从全局数据源获取信息，渲染出带颜色和名称的标签。</li><li>若 <code>activity.tagIds</code> 为空，则不显示任何标签。</li></ul></li><li><ol start="2"><li>编辑规则 (调用既有能力)：</li></ol><ul><li>点击 <code>×</code> 时，调用更新 <code>Activity</code> 的 action，将对应的 <code>tagId</code> 从 <code>activity.tagIds</code> 数组中移除。</li><li><code>TagManager</code> 本身不直接改变左侧列表的筛选状态。</li></ul></li><li><ol start="3"><li>筛选与联动规则 (更新全局 State)：</li></ol><ul><li>单标签筛选：调用 action，将该 <code>tagId</code> 添加到 <code>searchUi.filterTagIds</code> 数组中。左侧列表根据订阅自动刷新，仅显示同时包含所有 <code>filterTagIds</code> 中标签的 <code>Activity</code>。</li><li>取消筛选：调用 action，将该 <code>tagId</code> 从 <code>searchUi.filterTagIds</code> 数组中移除。左侧列表自动刷新。</li><li>叠加筛选：行为与“单标签筛选”一致，即将新的 <code>tagId</code> 追加到 <code>searchUi.filterTagIds</code> 数组中，实现“与”逻辑的叠加筛选。</li><li>清除筛选：调用 action，将 <code>searchUi.filterTagIds</code> 数组置空 (<code>[]</code>)。左侧列表恢复显示所有条目。</li><li>界面需要明确显示当前激活的筛选标签（例如在列表顶部或搜索栏下方）。</li></ul></li></ul>',71)]))}const g=a(t,[["render",d]]);export{T as __pageData,g as default};
