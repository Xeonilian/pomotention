import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.Cs5y-aXb.js";const c=JSON.parse('{"title":"Tauri 2.0 插件安装 SOP (使用 pnpm)","description":"","frontmatter":{},"headers":[],"relativePath":"dev-log/SOP/install-pnpm-package.md","filePath":"dev-log/SOP/install-pnpm-package.md","lastUpdated":1757302492000}'),l={name:"dev-log/SOP/install-pnpm-package.md"};function e(p,s,h,r,k,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="tauri-2-0-插件安装-sop-使用-pnpm" tabindex="-1">Tauri 2.0 插件安装 SOP (使用 pnpm) <a class="header-anchor" href="#tauri-2-0-插件安装-sop-使用-pnpm" aria-label="Permalink to &quot;Tauri 2.0 插件安装 SOP (使用 pnpm)&quot;">​</a></h1><h2 id="插件类型分类" tabindex="-1">插件类型分类 <a class="header-anchor" href="#插件类型分类" aria-label="Permalink to &quot;插件类型分类&quot;">​</a></h2><h3 id="🟢-type-a-纯前端插件-简单安装" tabindex="-1">🟢 Type A: 纯前端插件 (简单安装) <a class="header-anchor" href="#🟢-type-a-纯前端插件-简单安装" aria-label="Permalink to &quot;🟢 Type A: 纯前端插件 (简单安装)&quot;">​</a></h3><ul><li><strong>特征</strong>: 不涉及系统级操作，只做前端逻辑处理</li><li><strong>示例</strong>: UI 组件库、数据处理库、状态管理等</li><li><strong>安装</strong>: 只需 <code>pnpm install</code></li></ul><h3 id="🟡-type-b-tauri-官方插件-需要完整配置" tabindex="-1">🟡 Type B: Tauri 官方插件 (需要完整配置) <a class="header-anchor" href="#🟡-type-b-tauri-官方插件-需要完整配置" aria-label="Permalink to &quot;🟡 Type B: Tauri 官方插件 (需要完整配置)&quot;">​</a></h3><ul><li><strong>特征</strong>: 涉及系统 API 调用 (文件系统、网络、硬件等)</li><li><strong>示例</strong>: <code>@tauri-apps/plugin-fs</code>, <code>@tauri-apps/plugin-dialog</code>, <code>@tauri-apps/plugin-http</code> 等</li><li><strong>原因</strong>: 需要 Rust 后端支持 + 安全权限控制</li></ul><h2 id="判断方法" tabindex="-1">判断方法 <a class="header-anchor" href="#判断方法" aria-label="Permalink to &quot;判断方法&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果包名以这些开头，通常是 Type B</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@tauri-apps/plugin-*</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@tauri-apps/api-*</span></span></code></pre></div><h2 id="type-b-插件完整安装流程" tabindex="-1">Type B 插件完整安装流程 <a class="header-anchor" href="#type-b-插件完整安装流程" aria-label="Permalink to &quot;Type B 插件完整安装流程&quot;">​</a></h2><p>以 <code>@tauri-apps/plugin-fs</code> 为例：</p><h3 id="_1-前端安装" tabindex="-1">1. 前端安装 <a class="header-anchor" href="#_1-前端安装" aria-label="Permalink to &quot;1. 前端安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @tauri-apps/plugin-fs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @tauri-apps/plugin-dialog</span></span></code></pre></div><h3 id="_2-后端依赖-src-tauri-cargo-toml" tabindex="-1">2. 后端依赖 (<code>src-tauri/Cargo.toml</code>) <a class="header-anchor" href="#_2-后端依赖-src-tauri-cargo-toml" aria-label="Permalink to &quot;2. 后端依赖 (\`src-tauri/Cargo.toml\`)&quot;">​</a></h3><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tauri = { version = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.5.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, features = [] }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tauri-plugin-fs = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tauri-plugin-dialog = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加你需要的其他插件...</span></span></code></pre></div><h3 id="_3-注册插件-src-tauri-src-lib-rs" tabindex="-1">3. 注册插件 (<code>src-tauri/src/lib.rs</code>) <a class="header-anchor" href="#_3-注册插件-src-tauri-src-lib-rs" aria-label="Permalink to &quot;3. 注册插件 (\`src-tauri/src/lib.rs\`)&quot;">​</a></h3><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#[cfg_attr(mobile, tauri</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mobile_entry_point)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tauri</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tauri_plugin_fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tauri_plugin_dialog</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 添加你需要的其他插件...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">invoke_handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tauri</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate_handler!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 你的命令 */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tauri</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate_context!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error while running tauri application&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_4-权限配置-src-tauri-capabilities-default-json" tabindex="-1">4. 权限配置 (<code>src-tauri/capabilities/default.json</code>) <a class="header-anchor" href="#_4-权限配置-src-tauri-capabilities-default-json" aria-label="Permalink to &quot;4. 权限配置 (\`src-tauri/capabilities/default.json\`)&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../gen/schemas/desktop-schema.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Capability for the main window&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;windows&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;permissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;core:default&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 文件系统权限</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;fs:allow-write-text-file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;fs:allow-read-text-file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 对话框权限</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;dialog:allow-save&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;dialog:allow-open&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 根据需要添加其他权限...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_5-验证安装" tabindex="-1">5. 验证安装 <a class="header-anchor" href="#_5-验证安装" aria-label="Permalink to &quot;5. 验证安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 清理缓存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新构建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tauri</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h2 id="为什么文件系统插件需要这些配置" tabindex="-1">为什么文件系统插件需要这些配置？ <a class="header-anchor" href="#为什么文件系统插件需要这些配置" aria-label="Permalink to &quot;为什么文件系统插件需要这些配置？&quot;">​</a></h2><h3 id="🔒-安全原因" tabindex="-1">🔒 安全原因 <a class="header-anchor" href="#🔒-安全原因" aria-label="Permalink to &quot;🔒 安全原因&quot;">​</a></h3><ul><li><strong>文件系统访问 = 高风险操作</strong></li><li>可以读写用户文件、系统文件</li><li>Tauri 必须严格控制这些权限</li></ul><h3 id="🏗️-架构原因" tabindex="-1">🏗️ 架构原因 <a class="header-anchor" href="#🏗️-架构原因" aria-label="Permalink to &quot;🏗️ 架构原因&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>前端 JS                 Tauri Runtime              Rust 后端                 系统</span></span>
<span class="line"><span>writeTextFile()  →     IPC 通信        →     插件处理逻辑    →     实际文件操作</span></span>
<span class="line"><span>     ↑                      ↑                       ↑                    ↑</span></span>
<span class="line"><span>  需要前端包           需要权限检查          需要 Rust 插件         需要系统权限</span></span></code></pre></div><h3 id="🎯-设计目标" tabindex="-1">🎯 设计目标 <a class="header-anchor" href="#🎯-设计目标" aria-label="Permalink to &quot;🎯 设计目标&quot;">​</a></h3><ol><li><strong>最小权限原则</strong>: 只给应用真正需要的权限</li><li><strong>透明度</strong>: 用户能清楚看到应用会访问什么</li><li><strong>模块化</strong>: 不需要的功能不会被包含在最终应用中</li></ol><h2 id="常用权限对照表" tabindex="-1">常用权限对照表 <a class="header-anchor" href="#常用权限对照表" aria-label="Permalink to &quot;常用权限对照表&quot;">​</a></h2><table tabindex="0"><thead><tr><th>功能</th><th>权限</th></tr></thead><tbody><tr><td>读取文件</td><td><code>fs:allow-read-text-file</code></td></tr><tr><td>写入文件</td><td><code>fs:allow-write-text-file</code></td></tr><tr><td>保存对话框</td><td><code>dialog:allow-save</code></td></tr><tr><td>打开对话框</td><td><code>dialog:allow-open</code></td></tr><tr><td>HTTP 请求</td><td><code>http:default</code></td></tr><tr><td>通知</td><td><code>notification:default</code></td></tr></tbody></table><h2 id="故障排查检查清单" tabindex="-1">故障排查检查清单 <a class="header-anchor" href="#故障排查检查清单" aria-label="Permalink to &quot;故障排查检查清单&quot;">​</a></h2><ul><li>[ ] 前端包已安装 (<code>pnpm list | grep @tauri-apps</code>)</li><li>[ ] Cargo.toml 添加了 Rust 依赖</li><li>[ ] lib.rs 注册了插件</li><li>[ ] capabilities 文件配置了权限</li><li>[ ] 清理了缓存 (<code>cargo clean</code>)</li><li>[ ] 重新构建了项目</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p><strong>为什么你选择的包需要这些配置？</strong></p><p>因为 <code>@tauri-apps/plugin-fs</code> 和 <code>@tauri-apps/plugin-dialog</code> 都属于 <strong>系统级插件</strong>，它们：</p><ol><li><strong>直接操作系统资源</strong> (文件系统、GUI 对话框)</li><li><strong>具有安全风险</strong> (可以访问用户数据)</li><li><strong>需要原生代码支持</strong> (纯 JavaScript 无法直接操作文件系统)</li></ol><p>而普通的前端库 (如 Vue 组件、工具函数) 只在浏览器环境中运行，不需要这些配置。</p>`,36)]))}const g=i(l,[["render",e]]);export{c as __pageData,g as default};
