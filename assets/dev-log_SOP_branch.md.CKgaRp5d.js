import{_ as a,c as i,o as n,ag as t}from"./chunks/framework.Cs5y-aXb.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"dev-log/SOP/branch.md","filePath":"dev-log/SOP/branch.md","lastUpdated":1757302492000}'),e={name:"dev-log/SOP/branch.md"};function h(l,s,p,r,k,o){return n(),i("div",null,s[0]||(s[0]=[t(`<p>多台电脑开发新分支的标准操作流程(SOP)</p><h2 id="🖥️-电脑-a-创建分支的电脑" tabindex="-1">🖥️ <strong>电脑 A（创建分支的电脑）</strong> <a class="header-anchor" href="#🖥️-电脑-a-创建分支的电脑" aria-label="Permalink to &quot;🖥️ **电脑 A（创建分支的电脑）**&quot;">​</a></h2><h3 id="_1-创建并切换到新分支" tabindex="-1">1. 创建并切换到新分支 <a class="header-anchor" href="#_1-创建并切换到新分支" aria-label="Permalink to &quot;1. 创建并切换到新分支&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 确保在最新的主分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建并切换到新分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-branch-name</span></span></code></pre></div><h3 id="_2-推送新分支到远程" tabindex="-1">2. 推送新分支到远程 <a class="header-anchor" href="#_2-推送新分支到远程" aria-label="Permalink to &quot;2. 推送新分支到远程&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 首次推送新分支到远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-branch-name</span></span></code></pre></div><h2 id="💻-电脑-b-另一台电脑" tabindex="-1">💻 <strong>电脑 B（另一台电脑）</strong> <a class="header-anchor" href="#💻-电脑-b-另一台电脑" aria-label="Permalink to &quot;💻 **电脑 B（另一台电脑）**&quot;">​</a></h2><h3 id="_1-更新远程分支信息" tabindex="-1">1. 更新远程分支信息 <a class="header-anchor" href="#_1-更新远程分支信息" aria-label="Permalink to &quot;1. 更新远程分支信息&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取最新的远程分支信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span></span></code></pre></div><h3 id="_2-检出远程分支" tabindex="-1">2. 检出远程分支 <a class="header-anchor" href="#_2-检出远程分支" aria-label="Permalink to &quot;2. 检出远程分支&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到新分支（会自动创建本地分支并跟踪远程分支）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-branch-name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者使用更明确的命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-branch-name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin/feature/your-branch-name</span></span></code></pre></div><h2 id="🔄-日常开发同步流程" tabindex="-1">🔄 <strong>日常开发同步流程</strong> <a class="header-anchor" href="#🔄-日常开发同步流程" aria-label="Permalink to &quot;🔄 **日常开发同步流程**&quot;">​</a></h2><h3 id="开始工作前" tabindex="-1">开始工作前： <a class="header-anchor" href="#开始工作前" aria-label="Permalink to &quot;开始工作前：&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-branch-name</span></span></code></pre></div><h3 id="提交工作后" tabindex="-1">提交工作后： <a class="header-anchor" href="#提交工作后" aria-label="Permalink to &quot;提交工作后：&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your commit message&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-branch-name</span></span></code></pre></div><h3 id="清理远程已删除的分支引用" tabindex="-1">清理远程已删除的分支引用 <a class="header-anchor" href="#清理远程已删除的分支引用" aria-label="Permalink to &quot;清理远程已删除的分支引用&quot;">​</a></h3><p><code>git remote prune origin</code></p><h3 id="或者在-fetch-时自动清理" tabindex="-1">或者在 fetch 时自动清理 <a class="header-anchor" href="#或者在-fetch-时自动清理" aria-label="Permalink to &quot;或者在 fetch 时自动清理&quot;">​</a></h3><p><code>git fetch origin --prune</code></p><h3 id="删除和强制删除" tabindex="-1">删除和强制删除 <a class="header-anchor" href="#删除和强制删除" aria-label="Permalink to &quot;删除和强制删除&quot;">​</a></h3><p>git branch -d branch-name git branch -D branch-name</p><h2 id="⚠️-常见问题解答" tabindex="-1">⚠️ <strong>常见问题解答</strong> <a class="header-anchor" href="#⚠️-常见问题解答" aria-label="Permalink to &quot;⚠️ **常见问题解答**&quot;">​</a></h2><p><strong>Q: 为什么不会自动切换？</strong></p><ul><li>Git 不会自动切换分支，需要手动使用<code>git checkout</code>命令</li><li>新创建的分支只存在于创建它的电脑上，其他电脑需要先<code>fetch</code>然后<code>checkout</code></li></ul><p><strong>Q: 如果忘记推送怎么办？</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在电脑B上会看不到新分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看远程分支列表</span></span></code></pre></div><p><strong>Q: 两台电脑同时修改怎么处理冲突？</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先拉取最新代码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-branch-name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果有冲突，解决后再提交</span></span></code></pre></div><h2 id="📋-最佳实践" tabindex="-1">📋 <strong>最佳实践</strong> <a class="header-anchor" href="#📋-最佳实践" aria-label="Permalink to &quot;📋 **最佳实践**&quot;">​</a></h2><ol><li><strong>命名规范</strong>：使用描述性的分支名，如<code>feature/user-authentication</code></li><li><strong>频繁同步</strong>：每天开始和结束工作时都要 pull/push</li><li><strong>小步提交</strong>：频繁提交小的改动，便于追踪和回滚</li><li><strong>分支保护</strong>：重要分支设置保护规则，避免直接推送</li></ol>`,31)]))}const g=a(e,[["render",h]]);export{c as __pageData,g as default};
